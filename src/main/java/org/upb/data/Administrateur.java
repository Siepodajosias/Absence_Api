package org.upb.data;
// Generated 31 ao�t 2022 � 12:53:26 by Hibernate Tools 4.3.5.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Administrateur generated by hbm2java
 */
@Entity
@Table(name = "administrateur", catalog = "upb")
public class Administrateur implements java.io.Serializable {

	private Integer idResponsable;
	private Niveau niveau;
	private String emailAdmin;
	private Set<Utilisateur> utilisateurs = new HashSet<Utilisateur>(0);

	public Administrateur() {
	}

	public Administrateur(String emailAdmin) {
		this.emailAdmin = emailAdmin;
	}

	public Administrateur(Niveau niveau, String emailAdmin, Set<Utilisateur> utilisateurs) {
		this.niveau = niveau;
		this.emailAdmin = emailAdmin;
		this.utilisateurs = utilisateurs;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)

	@Column(name = "id_responsable", unique = true, nullable = false)
	public Integer getIdResponsable() {
		return this.idResponsable;
	}

	public void setIdResponsable(Integer idResponsable) {
		this.idResponsable = idResponsable;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "Niveau_id_niveau")
	public Niveau getNiveau() {
		return this.niveau;
	}

	public void setNiveau(Niveau niveau) {
		this.niveau = niveau;
	}

	@Column(name = "email_admin", nullable = false, length = 45)
	public String getEmailAdmin() {
		return this.emailAdmin;
	}

	public void setEmailAdmin(String emailAdmin) {
		this.emailAdmin = emailAdmin;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "administrateur")
	public Set<Utilisateur> getUtilisateurs() {
		return this.utilisateurs;
	}

	public void setUtilisateurs(Set<Utilisateur> utilisateurs) {
		this.utilisateurs = utilisateurs;
	}

}
